# Generated by Django 5.1.5 on 2025-02-07 22:03

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Actors",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Theatre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("location", models.CharField(max_length=255)),
                ("num_vip_seats", models.IntegerField()),
                ("num_normal_seats", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "genres",
                    models.CharField(
                        choices=[
                            ("action", "Action"),
                            ("adventure", "Adventure"),
                            ("comedy", "Comedy"),
                            ("war", "War"),
                            ("family", "Family"),
                        ],
                        max_length=255,
                    ),
                ),
                ("actors", models.ManyToManyField(to="core.actors")),
            ],
        ),
        migrations.CreateModel(
            name="Movie_shedules",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("datetime", models.DateTimeField()),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.movie"
                    ),
                ),
                (
                    "theatre",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.theatre"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Seats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number_vip_seats", models.IntegerField(editable=False)),
                ("number_normal_seats", models.IntegerField(editable=False)),
                ("fix_vip_seats", models.IntegerField(editable=False)),
                ("fix_normal_seats", models.IntegerField(editable=False)),
                (
                    "movie_time_infos",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.movie_shedules",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "seat_type",
                    models.CharField(
                        choices=[("vip", "Vip"), ("normal", "Normal")], max_length=255
                    ),
                ),
                ("username", models.CharField(max_length=255)),
                ("ticket_number", models.IntegerField(editable=False)),
                (
                    "movie_shedule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.movie_shedules",
                    ),
                ),
            ],
        ),
    ]
